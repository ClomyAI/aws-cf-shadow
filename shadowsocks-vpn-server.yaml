AWSTemplateFormatVersion: '2010-09-09'
Description: Setting up VPN on AWS with https://github.com/shadowsocks

Parameters:
  VPNPassword:
    NoEcho: 'true'
    Description: VPN Password (Min 4 characters)
    Type: String
    MinLength: '4'
    MaxLength: '255'
    ConstraintDescription: must contain atleast 4 characters.
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  InstanceType:
    Description: Instance Type
    Type: String
    Default: t3.micro
    AllowedValues:
    - t3.micro
  KeyName:
    Description: Instance Type
    Type: String
    Default: shadowsocks-vpn-hk
    AllowedValues:
    - shadowsocks-vpn-hk
    - shadowsocks-vpn-uk
    - shadowsocks-vpn-us

Resources:
  VPNServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      SecurityGroups:
      - Ref: VPNSecurityGroup
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
      KeyName: !Ref KeyName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update
          yum install -y python-pip
          pip install shadowsocks
          mkdir /etc/shadowsocks
          echo '
            {
              "server": "0.0.0.0",
              "server_port": 8388,
              "local_address": "127.0.0.1",
              "local_port": 1080,
              "password": "${VPNPassword}",
              "timeout": 300,
              "method": "aes-256-cfb",
              "fast_open": false,
              "workers": 1
            }' >> /etc/shadowsocks/config.json
          
          chmod +x /etc/rc.d/rc.local
          echo 'ssserver -c /etc/shadowsocks/config.json -d start' >> /etc/rc.local
          ssserver -c /etc/shadowsocks/config.json -d start

  VPNSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: VPN Security Groups
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '8000'
        ToPort: '8388'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0

Outputs:
  VPNServerAddress:
    Description: Use the IP as Server Address or VPN Host
    Value:
      Fn::GetAtt:
        - VPNServerInstance
        - PublicIp
  WebdigiNotes:
    Description: Setting up VPN on AWS with https://github.com/shadowsocks
    Value: Comments
